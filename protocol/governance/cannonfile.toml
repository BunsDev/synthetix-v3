name = "synthetix-governance"
description = "On-chain voting for synthetix councils"
version = "<%= package.version %>"

[setting.salt]
defaultValue = "governance"

# Deployment Owner, defaults to first hardhat account
[setting.owner]
defaultValue = "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266"

[setting.council_token_name]
defaultValue = "Synthetix Governance Module"

[setting.council_token_symbol]
defaultValue = "SNXGOV"

[setting.council_token_uri]
defaultValue = "https://synthetix.io"

[setting.init_council_member]
defaultValue = "0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266" # can only specify 1

# TODO Use this instead of dynamic value in prod
# [setting.epoch_start]
# defaultValue = "1675715044"

[setting.epoch_duration]
defaultValue = "120" # days

[setting.nomination_period_duration]
defaultValue = "7" # days

[setting.voting_period_duration]
defaultValue = "14" # days

[contract.CoreModule]
artifact = "contracts/modules/core/CoreModule.sol:CoreModule"
create2 = true

[contract.InitialProxy]
artifact = "contracts/Proxy.sol:Proxy"
args = ["<%= contracts.CoreModule.address %>", "<%= settings.owner %>"]
salt = "<%= settings.salt %>"
abiOf = ["CoreModule"]
create2 = true
depends = ["contract.CoreModule"]

[contract.AssociatedSystemsModule]
artifact = "contracts/modules/core/AssociatedSystemsModule.sol:AssociatedSystemsModule"

[contract.ElectionModule]
artifact = "ElectionModule"

[contract.ElectionInspectorModule]
artifact = "ElectionInspectorModule"

[contract.CouncilTokenModule]
artifact = "CouncilTokenModule"

[contract.DebtShareMock]
artifact = "DebtShareMock"

[router.CoreRouter]
contracts = [
  "AssociatedSystemsModule",
  "ElectionModule",
  "ElectionInspectorModule",
  "CoreModule",
]
depends = [
  "contract.AssociatedSystemsModule",
  "contract.ElectionModule",
  "contract.ElectionInspectorModule",
  "contract.CoreModule",
]

[invoke.upgrade_core_proxy]
target = ["InitialProxy"]
from = "<%= settings.owner %>"
func = "upgradeTo"
args = ["<%= contracts.CoreRouter.address %>"]
factory.CoreProxy.abiOf = ["CoreRouter"]
factory.CoreProxy.event = "Upgraded"
factory.CoreProxy.arg = 0
depends = ["contract.InitialProxy", "router.CoreRouter"]

[router.CouncilTokenRouter]
contracts = [
  "CouncilTokenModule",
  "CoreModule",
]
depends = [
  "contract.CouncilTokenModule",
  "contract.CoreModule"
]

[invoke.init_council_token]
target = ["CoreProxy"]
from = "<%= settings.owner %>"
func = "initOrUpgradeNft"
args = [
  "<%= formatBytes32String('councilToken') %>",
  "<%= settings.council_token_name %>",
  "<%= settings.council_token_symbol %>",
  "<%= settings.council_token_uri %>",
  "<%= contracts.CouncilTokenRouter.address %>"
]
depends = [
  "invoke.upgrade_core_proxy",
  "router.CouncilTokenRouter"
]
factory.AccountProxy.abiOf = ["CouncilTokenRouter"]
factory.AccountProxy.event = "AssociatedSystemSet"
factory.AccountProxy.arg = 2

[invoke.init_election_module]
target = ["CoreProxy"]
func = "initOrUpgradeElectionModule(address[],uint8,uint64,uint64,uint64,address)"
args = [
  ["<%= settings.init_council_member %>"],
  "1",
  "<%= Math.floor(Date.now() / 1000) + 86400 * settings.epoch_duration - 86400 * settings.voting_period_duration - 86400 * settings.nomination_period_duration %>",
  "<%= Math.floor(Date.now() / 1000) + 86400 * settings.epoch_duration - 86400 * settings.voting_period_duration %>",
  "<%= Math.floor(Date.now() / 1000) + 86400 * settings.epoch_duration %>",
  "<%= contracts.DebtShareMock.address %>",
]
from = "<%= settings.owner %>"
depends = ["invoke.init_council_token", "contract.DebtShareMock"]
